# Generated by Django 5.2.3 on 2025-10-13 11:04

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_file', models.FileField(help_text='Upload audio file (MP3, WAV, M4A, OGG, or FLAC format)', max_length=500, upload_to='meetings/audio/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3', 'wav', 'm4a', 'ogg', 'flac'])])),
                ('title', models.CharField(default='Untitled Meeting', help_text='Meeting title or name', max_length=200)),
                ('duration', models.IntegerField(blank=True, help_text='Duration in seconds', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], db_index=True, default='pending', help_text='Current processing status', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when meeting was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when meeting was last updated')),
                ('file_size', models.IntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('notes', models.TextField(blank=True, help_text='Optional notes or description', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if processing failed', null=True)),
            ],
            options={
                'verbose_name': 'Meeting',
                'verbose_name_plural': 'Meetings',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['-created_at'], name='meetings_me_created_c5ff00_idx'), models.Index(fields=['status'], name='meetings_me_status_14fbb6_idx')],
            },
        ),
        migrations.CreateModel(
            name='Summary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('executive_summary', models.TextField(help_text='Brief overview of meeting')),
                ('key_decisions', models.JSONField(default=list, help_text='List of key decisions made during the meeting')),
                ('discussion_topics', models.JSONField(default=list, help_text='Main topics discussed during the meeting')),
                ('participants', models.JSONField(blank=True, default=list, help_text='List of meeting participants (if detected)')),
                ('insights', models.JSONField(blank=True, default=list, help_text='Key insights or takeaways')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when summary was created')),
                ('meeting', models.OneToOneField(help_text='Related meeting record', on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='meetings.meeting')),
            ],
            options={
                'verbose_name': 'Summary',
                'verbose_name_plural': 'Summaries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Full transcript text')),
                ('language', models.CharField(default='en', help_text='Language code (e.g., en, es, fr)', max_length=10)),
                ('word_count', models.IntegerField(default=0, help_text='Number of words in transcript')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when transcript was created')),
                ('confidence_score', models.FloatField(blank=True, help_text='ASR confidence score (0.0 to 1.0)', null=True)),
                ('meeting', models.ForeignKey(help_text='Related meeting record', on_delete=django.db.models.deletion.CASCADE, related_name='transcripts', to='meetings.meeting')),
            ],
            options={
                'verbose_name': 'Transcript',
                'verbose_name_plural': 'Transcripts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.CharField(help_text='Task or action item description', max_length=300)),
                ('assignee', models.CharField(blank=True, help_text='Person assigned to this task', max_length=100, null=True)),
                ('deadline', models.DateField(blank=True, help_text='Task deadline date', null=True)),
                ('priority', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], db_index=True, default='medium', help_text='Task priority level', max_length=10)),
                ('is_completed', models.BooleanField(default=False, help_text='Whether the task has been completed')),
                ('completed_at', models.DateTimeField(blank=True, help_text='Timestamp when task was marked as completed', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when action item was created')),
                ('notes', models.TextField(blank=True, help_text='Additional notes or context for this task', null=True)),
                ('meeting', models.ForeignKey(help_text='Related meeting record', on_delete=django.db.models.deletion.CASCADE, related_name='action_items', to='meetings.meeting')),
            ],
            options={
                'verbose_name': 'Action Item',
                'verbose_name_plural': 'Action Items',
                'ordering': ['-priority', 'deadline', '-created_at'],
                'indexes': [models.Index(fields=['priority', 'deadline'], name='meetings_ac_priorit_f4e7ca_idx'), models.Index(fields=['is_completed'], name='meetings_ac_is_comp_d75ddf_idx')],
            },
        ),
    ]
